/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
&lt 5 LEFT_BRACKET  &kp Q       &kp W           &kp E        &kp R             &mt LC(N5) T          &mt LC(N5) Y        &kp U             &kp I        &kp O           &kp P              &lt 5 RIGHT_BRACKET
&kp GRAVE           &mt LWIN A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &mt LC(NUMBER_4) G    &mt LC(NUMBER_4) H  &mt LEFT_SHIFT J  &mt LCTRL K  &mt LEFT_ALT L  &mt LEFT_GUI SEMI  &kp SQT
&mt CAPS ESCAPE     &kp Z       &kp X           &mt INS C    &mt HOME V        &mt END B             &kp N               &kp M             &kp COMMA    &kp PERIOD      &kp F23            &kp EXCLAMATION
                                &lt 4 F21       &lt 3 F22    &mo 2             &lt 1 SPACE           &kp ENTER           &kp BACKSPACE     &kp DELETE   &kp TAB
            >;
        };

        num {
            bindings = <
&kp LEFT_PARENTHESIS   &kp PLUS                  &mt LA(NUMBER_7) NUMBER_7  &mt STAR N8          &mt LA(NUMBER_9) NUMBER_9  &mt UNDERSCORE MINUS    &trans  &trans          &kp UP_ARROW    &trans     &trans  &trans
&kp F24                &kp EQUAL                 &mt LA(NUMBER_4) NUMBER_4  &mt PERCENT N5       &mt LA(NUMBER_6) NUMBER_6  &kp LA(NUMBER_5)        &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&kp RIGHT_PARENTHESIS  &kp LA(NON_US_BACKSLASH)  &mt LA(NUMBER_1) NUMBER_1  &mt LA(NUMBER_2) N2  &mt LA(N3) N3              &kp LA(NUMBER_8)        &trans  &trans          &trans          &trans     &trans  &trans
                                                 &mt F21 NUMBER_0           &kp F22              &trans                     &trans                  &trans  &trans          &trans          &trans
            >;
        };

        right_keys {
            bindings = <
&kp RIGHT_BRACKET  &kp P          &kp O       &kp I      &kp U   &kp Y     &trans  &trans  &trans  &trans  &trans  &trans
&kp SQT            &kp SEMICOLON  &kp L       &kp K      &kp J   &kp H     &trans  &trans  &trans  &trans  &trans  &trans
&kp EXCL           &kp F23        &kp PERIOD  &kp COMMA  &kp M   &kp N     &trans  &trans  &trans  &trans  &trans  &trans
                                  &kp F21     &kp F22    &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        multi {
            bindings = <
&kp LG(S)  &kp LG(Q)  &kp LG(W)         &kp LA(E)         &kp LA(R)  &kp LA(T)    &trans  &trans  &trans  &trans  &trans  &trans
&kp LG(A)  &kp LA(I)  &kp LA(S)         &kp LC(NUMBER_3)  &kp LA(F)  &kp LA(L)    &trans  &trans  &trans  &trans  &trans  &trans
&kp LG(Z)  &kp LA(Z)  &kp LC(NUMBER_1)  &kp LA(C)         &kp LA(V)  &kp LA(B)    &trans  &trans  &trans  &trans  &trans  &trans
                      &kp TAB           &trans            &kp PG_UP  &kp PG_DN    &trans  &trans  &trans  &trans
            >;
        };

        func {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6     &trans  &trans          &trans     &trans        &trans        &trans
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &trans  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &trans
&trans  &trans  &trans  &trans   &trans   &trans     &trans  &trans          &trans     &trans        &trans        &trans
                &trans  &trans   &trans   &trans     &trans  &trans          &trans     &trans
            >;
        };

        sys {
            bindings = <
&trans  &trans        &trans        &trans        &sys_reset      &bootloader     &bootloader   &sys_reset      &trans        &trans        &trans        &trans
&trans  &trans        &trans        &out OUT_TOG  &bt BT_CLR_ALL  &bt BT_CLR      &bt BT_CLR    &bt BT_CLR_ALL  &out OUT_TOG  &trans        &trans        &trans
&trans  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1    &bt BT_SEL 0    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
                      &trans        &trans        &trans          &trans          &trans        &trans          &trans        &trans
            >;
        };
    };
};
