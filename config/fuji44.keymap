/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
&kp LEFT_BRACKET  &kp Q       &kp W            &kp E        &kp R             &kp T          &kp Y        &kp U             &kp I           &kp O           &kp P              &kp RIGHT_BRACKET
&kp GRAVE         &mt LWIN A  &mt LEFT_ALT S   &mt LCTRL D  &mt LEFT_SHIFT F  &kp G          &kp H        &mt LEFT_SHIFT J  &mt LCTRL K     &mt LEFT_ALT L  &mt LEFT_GUI SEMI  &kp SQT
&mt CAPS ESCAPE   &kp Z       &kp X            &mt INS C    &mt HOME V        &mt END B      &kp N        &kp M             &kp COMMA       &kp PERIOD      &kp LS(N7)         &kp EXCLAMATION
                              &lt 4 RS(SLASH)  &lt 3 SLASH  &lt 2 LG(SPACE)   &lt 1 SPACE    &lt 3 ENTER  &lt 4 BACKSPACE   &kp LEFT_SHIFT  &kp LCTRL
            >;
        };

        num {
            bindings = <
&kp LEFT_PARENTHESIS   &kp PLUS                  &kp N7        &kp N8        &kp N9        &kp MINUS           &trans  &trans          &kp UP_ARROW    &trans     &trans  &trans
&kp LS(NUMBER_2)       &kp EQUAL                 &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LS(NUMBER_6)    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&kp RIGHT_PARENTHESIS  &kp LS(NON_US_BACKSLASH)  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LS(NUMBER_4)    &trans  &trans          &trans          &trans     &trans  &trans
                                                 &kp NUMBER_0  &kp SLASH     &trans        &trans              &trans  &trans          &kp LEFT_SHIFT  &kp LCTRL
            >;
        };

        Right_keys {
            bindings = <
&kp RIGHT_BRACKET  &kp P          &kp O          &kp I      &kp U   &kp Y     &trans  &trans  &trans  &trans  &trans  &trans
&kp SQT            &kp SEMICOLON  &kp L          &kp K      &kp J   &kp H     &trans  &trans  &trans  &trans  &trans  &trans
&kp EXCL           &kp LS(N7)     &kp PERIOD     &kp COMMA  &kp M   &kp N     &trans  &trans  &trans  &trans  &trans  &trans
                                  &kp LS(SLASH)  &kp DOT    &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        nav {
            bindings = <
&kp LG(S)  &kp LG(Q)  &kp LG(W)         &kp LA(E)         &kp LA(R)      &kp LA(T)      &trans    &trans    &trans         &trans       &trans  &trans
&kp LG(A)  &kp LA(I)  &kp LA(S)         &kp LC(NUMBER_3)  &kp LA(F)      &kp LA(L)      &kp LEFT  &kp DOWN  &kp UP         &kp RIGHT    &trans  &trans
&kp LG(Z)  &kp LA(Z)  &kp LC(NUMBER_1)  &kp LA(C)         &kp LA(V)      &kp LA(B)      &kp HOME  &kp END   &kp PAGE_DOWN  &kp PAGE_UP  &trans  &trans
                      &kp TAB           &trans            &kp PAGE_DOWN  &kp PAGE_UP    &trans    &trans    &trans         &trans
            >;
        };

        sys {
            bindings = <
&bootloader     &trans      &kp STAR  &kp HASH      &kp PERCENT   &kp LA(NUMBER_2)    &trans        &trans        &trans        &trans  &trans      &bootloader
&bt BT_CLR_ALL  &bt BT_CLR  &trans    &trans        &bt BT_PRV    &bt BT_NXT          &bt BT_PRV    &bt BT_NXT    &trans        &trans  &bt BT_CLR  &bt BT_CLR_ALL
&sys_reset      &trans      &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans      &sys_reset
                            &trans    &trans        &trans        &trans              &trans        &trans        &trans        &trans
            >;
        };
    };
};
